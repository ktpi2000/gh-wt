#!/usr/bin/env bash
set -e

SCRIPT_DIR="$(dirname "${BASH_SOURCE[0]}")"
source "$SCRIPT_DIR/lib/common.sh"
source "$SCRIPT_DIR/lib/commands.sh"

show_help() {
    check_dependencies

    cat << EOF
gh-wt: Git Worktree management extension for GitHub CLI

USAGE:
    gh wt <command> [options]

COMMANDS:
    list                    List worktrees in current repository
    add <branch> [path]     Create a new worktree for a branch
    pr <number> [path]      Create worktree from PR number
    remove                  Remove a worktree interactively
    clean-merged            Find and delete merged branches interactively
    -- <command>            Execute command in selected worktree
    <command>               Execute command in selected worktree (interactive)
    help                    Show this help message

EXAMPLES:
    gh wt list
    gh wt add new-branch
    gh wt add new-branch ../my-feature
    gh wt pr 123
    gh wt remove
    gh wt clean-merged
    gh wt code              # Select worktree and open in VS Code
    gh wt git status        # Select worktree and run git status
    gh wt -- git status     # Same as above

EOF
}

main() {
    if [ $# -eq 0 ]; then
        show_help
        exit 0
    fi
    
    case "$1" in
        "list")
            cmd_list
            ;;
        "add")
            shift
            cmd_add "$@"
            ;;
        "pr")
            shift
            cmd_pr "$@"
            ;;
        "remove")
            cmd_remove
            ;;
        "clean-merged")
            cmd_clean_merged
            ;;
        "--")
            shift
            cmd_exec_with_selection "$@"
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            cmd_exec_with_selection "$@"
            ;;
    esac
}

main "$@"
